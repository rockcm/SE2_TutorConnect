name: Lint, Format, and Test

on:
  push:
    branches:
     - Sprint2_Adam
    paths:
      - '**.py'          # Trigger if any Python file changes
      - '**.js'          # Trigger if any JavaScript file changes
      - '**.sql'         # Trigger if any SQL file changes
      - 'requirements.txt'  # Trigger if dependencies change
      - 'package.json'   # Trigger if JS dependencies change
      - '.github/workflows/**'  # Trigger if the workflow file itself changes

  pull_request:
    branches:
      - Sprint2_Adam
    paths:
      - '**.py'
      - '**.js'
      - '**.sql'
      - 'requirements.txt'
      - 'package.json'
      - '.github/workflows/**'

jobs:
  lint-format-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [python, javascript, sql]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ----------------------------
      # Python Setup, Linting, Formatting & Testing
      # ----------------------------
      - name: Set up Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Generate requirements.txt
        if: matrix.language == 'python'
        run: |
          pip freeze > requirements.txt
          echo "Generated requirements.txt:"
          cat requirements.txt
      
      - name: Install Python Dependencies
        if: matrix.language == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8 black pytest

      - name: Run Python Linter (Flake8)
        if: matrix.language == 'python'
        run: flake8 --max-line-length=100 .

      - name: Commit and Push requirements.txt
        if: matrix.language == 'python'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add requirements.txt
          git commit -m "Auto-generate requirements.txt" || echo "No changes to commit"
          git push origin Sprint2_Adam || echo "No changes to push"

      - name: Install Python Dependencies
        if: matrix.language == 'python'
        run: |
          pip install -r requirements.txt

      - name: Run Python Linter
        if: matrix.language == 'python'
        run: flake8 --max-line-length=100 .

      - name: Format Python Code (Black)
        if: matrix.language == 'python'
        run: black --check .

      - name: Run Python Tests (Pytest)
        if: matrix.language == 'python'
        run: pytest

      # ----------------------------
      # JavaScript Setup, Linting, Formatting & Testing
      # ----------------------------
      - name: Set up Node.js
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install JavaScript Dependencies
        if: matrix.language == 'javascript'
        run: |
          npm install -g eslint prettier jest
          npm install

      - name: Run JavaScript Linter
        if: matrix.language == 'javascript'
        run: eslint . --ext .js,.jsx,.ts,.tsx

      - name: Format JavaScript Code (Prettier)
        if: matrix.language == 'javascript'
        run: prettier --check "**/*.{js,jsx,ts,tsx}"

      - name: Run JavaScript Tests (Jest)
        if: matrix.language == 'javascript'
        run: npm test

      # ----------------------------
      # SQL Setup, Linting & Formatting
      # ----------------------------
      - name: Install SQL Linter
        if: matrix.language == 'sql'
        run: pip install sqlfluff

      - name: Run SQL Linter (SQLFluff)
        if: matrix.language == 'sql'
        run: sqlfluff lint --dialect postgres .

      - name: Format SQL Code (SQLFluff Fix)
        if: matrix.language == 'sql'
        run: sqlfluff fix --dialect postgres .

      # ----------------------------
      # Auto-commit Fixes if Needed
      # ----------------------------
      - name: Commit and Push Auto-Fixes
        if: always()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Auto-format & lint fixes by GitHub Actions" || echo "No changes to commit"
          git push origin Sprint2_Adam || echo "No changes to push"
 
